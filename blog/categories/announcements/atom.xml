<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Announcements | Aashay.com]]></title>
  <link href="http://aashay.com/blog/categories/announcements/atom.xml" rel="self"/>
  <link href="http://aashay.com/"/>
  <updated>2013-05-03T01:55:18-07:00</updated>
  <id>http://aashay.com/</id>
  <author>
    <name><![CDATA[Aashay Desai]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hack For Change]]></title>
    <link href="http://aashay.com/blog/2011/06/24/Hack-For-Change/"/>
    <updated>2011-06-24T00:00:00-07:00</updated>
    <id>http://aashay.com/blog/2011/06/24/Hack-For-Change</id>
    <content type="html"><![CDATA[<p><em>Last weekend, I participated in <a href="http://change.org">Change.org</a> <a href="http://www.hackforchange.com">HackForChange</a> hackathon. We had 24 hours to design and build an app that could help change the world, and <a href="http://www.symbianone.com/content/view/7402/">we ended up winning 2nd place</a>! I wanted to take this opportunity to discuss my experience, and announce what lies ahead for our project, <a href="http://anonymou.se">AnonyMouse</a>.</em></p>

<!-- more -->


<h2>A Quick Disclaimer</h2>

<p>For those of you who may not be in the know, a "<a href="http://en.wikipedia.org/wiki/Hackathon">Hackathon</a>" has little to do with breaking into computer systems (do we still call this "cracking?") and my app AnonyMouse has no relation to the <a href="http://en.wikipedia.org/wiki/Anonymous_(group">Anonymous collective</a>).  The title of the app comes from the fact that most of the users will be anonymous.</p>

<h2>On Hackathons</h2>

<p>I've participated in a hackathon-type event before, but not one of this scale or caliber. I was on a team of three including myself, my colleague <a href="http://twitter.com/aaronmoy">Aaron Moy</a>, and a great designer we met named <a href="http://dogmo.org/">Eliza Wee</a>. Aaron put together the presentation and helped articulate the vision and user experience, Eliza created the front-end pages in HTML5 and CSS3, and I put together a backend. In 24 hours, we managed to put together a working demo and impress the judges (including Craig Newmark, the founder of Craigslist; Chris Bishko, investment director for Omidyar Network; and Tasneem Raja, <em>The Bay Citizen</em>’s Web producer) enough to claim the second place prize. The event took place at Change.org's headquarters and I must say, was very well organized. They fed us healthy food (Mmm quinoa) and gave us all of the resources we needed to get up and running fast, including presentations on various APIs including the <a href="http://twilio.com">Twilio</a> API, which we rely on. With the exception of a WiFi glitch early on Saturday night, everything ran smoothly.</p>

<h2>The Back Story</h2>

<p>Several months ago I met Aaron through a friend of mine and he discussed his vision for building a website for closeted LGBT individuals who are looking for a more personal mentoring experience than the existing solutions today (i.e. hotlines).  He explained his coming-out experience to me and his ideas for why such a website should exist. At the time, I was looking for an interesting hacking project to work on, and while I wasn’t a part of the LGBT community, I sympathized with Aaron’s experience and thought that his idea would make for an interesting side project.  So we got to work on a prototype.</p>

<p><span class='pullquote-right' data-pullquote='I began to understand what Aaron’s experience was like, and how terrible the situation is with respect to LGBT bullying.  And so, I no longer just had sympathy for the cause.  I had true empathy for the cause.'>
After spending some time with the project and having a few more discussions, something really hit me hard.  This wasn’t just an idea that could benefit the LGBT community.  This was something that could benefit <em>anyone</em> looking for some personalized help, but preferred to stay anonymous.  I began to understand what Aaron’s experience was like, and how terrible the situation is with respect to LGBT bullying.  And so, I no longer just had sympathy for the cause.  I had true empathy for the cause.
</span></p>

<p>I know what it’s like to be bullied for being different.  I remembered my own experiences growing up being small, skinny, nerdy, and ethnic in a relatively non-diverse community.  Bullying is inexcusable and can cause far more damage than people realize, particularly (but not exclusively) for younger people.</p>

<p>When I heard about HackForChange, I immediately jumped at the opportunity.  While we had some basic prototyping done, I felt like we needed something to help build momentum around our project, and this was the perfect opportunity.</p>

<h2>The Hack Story</h2>

<p><em>The following section is going to get pretty technical, so if it’s not your cup of tea, feel free to skip down to “The Takeaways.”  If it is, though, please don’t hesitate to post comments below (via Disqus).</em></p>

<p>The rules for the Hackathon were pretty basic.  Spend 24 hours and build a web or mobile app to help advance positive change.  Don’t use any existing code (unless it’s a publicly available library or API).  Hacking starts at noon on Saturday and ends with a final commit being pushed to GitHub by noon on Sunday.</p>

<p>Easy enough.  I was a bit bummed about the “no existing code” rule but this was a contest with a $10,000 prize pool, so fair is fair.  Our team sat down to rethink the overall experience and develop a totally new and “parallel” app to our existing prototype.</p>

<p>I decided to try out the Twilio API and create an SMS-based interface for mentees to talk to mentors (who would use a simple web chat interface back).  Twilio was an official sponsor of the hackathon and <a href="http://twitter.com/johndbritton">John Britton</a>, Developer Evangelist at Twilio, gave us a great demo of the API and generously provided us with a small account to get started.  The Twilio API was the only “unknown” in my stack of choice so the first thing I did was sit down to learn it.</p>

<p>Speaking of my stack (and tools) of choice:</p>

<ul>
<li><a href="http://www.mongodb.org">MongoDB</a>:  Honestly, I probably could’ve used a flat file for the demo that we did end up presenting.  However, I had a little experience with Mongo already (I used it in the prototype) so again, it was a question of speed.  I used MongoLab’s add-on for Heroku.</li>
<li><a href="http://nodejs.org/">Node.JS</a> + <a href="http://socket.io">Socket.IO</a> (via <a href="http://nowjs.com">NowJS</a>):  Since the largest component of our app is a real-time communication tool, it only made sense to do something that does real-time pretty well (for those of you unfamiliar with NowJS, I’d suggest checking it out.  It provides a pretty useful abstraction over Socket.IO, although its utility for my upcoming purposes may be overshadowed by the new Socket.IO 0.7).  Sure, I could’ve used EventMachine with Ruby, or even Twisted with Python, but I'm unfortunately not experienced enough with either to be dangerous, and JavaScript was the only “web” language that I was comfortable with (I use Java at my day job, but attempting to crank out a real-time web app in Java at a hackathon would've been a fool's errand for me).  I’ve enjoyed playing with both Ruby and Python, but at a 24 hour hackathon, I needed to use something that I was already fast with.  Makes sense, right?</li>
<li><a href="http://expressjs.com/">ExpressJS</a>:  This seems to be the web framework of choice for Node developers (and rightly so. It's a great, lightweight framework).  Sure, if I was using Ruby on Rails or some other code generating solutions, I would’ve had a <em>lot</em> of features pounded out in a shorter amount of time, but as I’ll discuss below, this would’ve been overkill (and would’ve also required me to know Rails.  I’ve played with Sinatra before, and Express is very Sinatra-like, so it felt natural).</li>
<li><a href="http://mootools.net/">MooTools</a>:  In retrospect, <a href="http://jquery.com/">jQuery</a> would’ve worked too.  I’ve been playing around with MooTools (I enjoy the OO aspect of it), but for the quickie UI code that I ended up throwing together, some simple DOM manipulation would’ve been just fine.  For the longer term, though, MooTools wins my vote (and I think I’m finally over the initial learning curve).</li>
<li><a href="http://en.wikipedia.org/wiki/HTML5">HTML5</a> + <a href="http://en.wikipedia.org/wiki/Cascading_Style_Sheets#CSS_3">CSS3</a>:  Eliza was a pro at cranking out a standards-compliant web front-end.  We it up on an iPhone browser and it worked just fine.</li>
<li><a href="http://heroku.com">Heroku</a>: They were a sponsor of the hackathon and graciously provided us with a month of free hosting.  For those of you who have never built an app on Heroku, you’re missing out on all sorts of warm tingly feelings that come from deploying your app by simply doing a “git push heroku master” in your command line.  I mean, damn.  Talk about rapid deployment.  (FULL DISCLOSURE:  I work at Salesforce.com and yes, they own Heroku, and no, I don’t get any fancy treatment because of this.  <em>Everyone</em> at the hackathon got a free month of Heroku hosting).</li>
<li><a href="http://git-scm.com/">Git</a>/<a href="http://github.com">GitHub</a>:  I probably don’t need to explain this one (GitHub was also a sponsor) but git is (and will be) my VCS of choice, and GitHub is an absolute <em>pleasure</em> to work with.  Also, all of our code had to be up on GitHub anyway, so that worked out well.</li>
</ul>


<p>Anyways, where was I?  Oh right, the Twilio API.  I initially attempted to use the <a href="https://github.com/sjwalter/node-twilio/wiki">twilio library in the npm repository</a>, but found it to be a bit cumbersome, in the sense that it actually needs to spin up <em>another</em> web server (on port 31337, yay nerd jokes), and I couldn’t find an easy way to make another app server running on another port on Heroku (I’m not saying it’s impossible, I’m saying that I didn’t feel like spending more time on it than I needed to).  So I gave up on using a library and settled for good ol’ fashioned REST (via <a href="https://github.com/danwrong/restler">Restler</a>).</p>

<p>Several hours later, I had a working API and a crappy prototype page that displayed inbound SMS messages in real time.  Call it a SMS log, if you will.  It was pretty snappy and was probably our first big milestone.  I decided to take a quick break and get some food and revel in my small but important victory.</p>

<p>Things started to get pretty hairy from then on.  The stress kicked in and contributed to wearing my brain out.  I compensated with caffeine (bad idea: caffeine makes you need to pee a lot, which requires you to get up a lot, which is disruptive) and tried to bang out as much code as I could.  I started getting a little bit disorganized with what features I really <em>needed</em> to build vs. which features I <em>thought</em> I had to build, so I ended up with a lot of “what if” scenarios that translated to unnecessary code.</p>

<p>I say “unnecessary” with a bit of caution here, however.  Had this been any other night of pure app coding, it would’ve been okay to write a bunch of stuff for later use.  After all, we have a vision and we want to see it through.  The key takeaway here is to remember that if you’re at a hackathon building an idea you’ve been thinking about, <em>stop thinking about the idea as you know it.</em>  In retrospect, all I needed to do was code <em>just enough</em> for the three minute (including demo) presentation that we were going to show the judges.  For some reason, the drive to make an awesome app took over the drive to make something that was <em>just enough</em>.</p>

<p>All’s well that ends well though, and after a ~22 hour hack fest (I went home for a relatively useless 2 hours of sleep), we demoed our app, had it judged, and claimed the second place prize.</p>

<h2>The Takeaways (or, Hackathons for Noobs)</h2>

<ol>
<li><strong>Get there early</strong>.  We were lucky enough to snag one of the very few designers at the hackathon.  There were 50-some participants and only 4-5 designers.  Network with as many people as you can before the clock starts, you never know who may be useful to your team.</li>
<li><strong>Eat a sustainable diet</strong>.  We were fortunate to be fed healthy food (basically, not typical “pizza and mountain dew” coder food) but I made the mistake of getting a bit overzealous with the caffeine.  I paid for this dearly in the day or two after the hackathon (my sleep schedule is still a couple hours off).</li>
<li><strong>BUILD A <em>MINIMUM</em> PRODUCT</strong>.  I capitalized this because I can’t stress this enough.  I kind of suck at keeping things to a bare minimum (I'm a bit of an over-thinker by nature) and it’s something that I feel comes more naturally with practice.  Our demo ended up being so simple, I’m almost glad we only had three minutes.  If you look at my <a href="https://github.com/hackforchange/AnonyMouse">GitHub repo</a> you will see an astonishing amount of terrible code that isn’t even used (random API calls I thought I needed). This is also important because it buys you more time to...</li>
<li><strong>...Get some sleep</strong>.   The <a href="http://goodneighbor.heroku.com/">first place winners</a> didn’t even end up needing to pull an all-nighter. They built a simple, elegant, and useful app, went home, and came back the next morning.  Sleep is important, and I know it’s tempting to be a “hero” and stay up all night, but I promise you will end up paying for it one way or another (think mistakes-to-tiredness ratio).  Besides, if you really need the entire time, you’re probably doing it wrong.</li>
<li><strong>Know your limits</strong>.  I ended up “cowboy” coding the entire app backend (there were a few JS hackers in the room who came by to talk to me, but most of them didn’t seem interested in working with a stack they hadn’t worked with before.  I don’t blame them) and I think I ended up coming off as a bit elitist because of this.  This couldn’t be further from the truth, however.  I’m new to this whole hacking game, and while I don’t think I’m a total zero, I know I have a <em>ton</em> to learn.  It would’ve been nice to have a teammate, but the moment I realized that I was on my own, I should’ve scaled down the amount of work.  In short, I bit off more than I could chew and ended up crashing hard after we were done.</li>
</ol>


<h2>The Long Road Ahead</h2>

<p>The good news is that I’m back on my feet and my zeal for bringing this vision come to life is stronger than ever.  I know there will be many barriers to cross, such as high-level problems like dealing with trolls and bigots (anyone know of any papers about anti-troll algorithms? :-p) to lower level problems such as deciding whether or not to keep the current stack I’m using vs switching something out (<a href="http://redis.io/">Redis</a> is looking more and more attractive).  I know that I will probably end up coding+pushing+refactoring my code a hundred times before I’m satisfied with it.</p>

<p>But that’s okay.  We’re going to make this happen one way or another.  At the end of the day, <a href="http://anonymou.se">AnonyMouse</a> is all that matters.  Having a safe, secure, and wonderful experience for both mentors and mentees that “just works” is all that matters.  Creating something that helps even a <em>few</em> people is all that matters.  And if we pick up a few more people who are willing to volunteer their time and efforts to the cause (either by helping me hack or simply helping us spread the word), that would be great too.</p>

<p>It’s not going to be quick, and it’s certainly not going to be easy.  We’ve got a long road ahead, a lot of ideas and features to discuss, and a ton of challenges to deal with, but I promise, we’ll make it happen.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog Like A Hacker]]></title>
    <link href="http://aashay.com/blog/2011/04/06/Blog-Like-A-Hacker/"/>
    <updated>2011-04-06T00:00:00-07:00</updated>
    <id>http://aashay.com/blog/2011/04/06/Blog-Like-A-Hacker</id>
    <content type="html"><![CDATA[<p><em>I'm told I'm supposed to <a href="http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html">Blog Like A Hacker</a>.<br/>
Well, here goes nothin.</em></p>

<!-- more -->


<h2>Inspired by Tom</h2>

<p>Tom Preston-Werner, one of GitHub’s cofounders, wrote the blog post I linked above, and I’d encourage you all to check out.  Just like Tom, I love writing.  I too have been locked in the constant unfortunate cycle of writing and quitting.</p>

<p>It's not that I don't have time to write. It’s just that I tend to spend most of my time writing code instead of, well, English. It should come as no surprise to anyone that I enjoy programming.  Yes, it’s a big part of what I do at my dayjob, but it also happens to be one of my greatest passions. I’ve been working on a couple of projects here and there, but I haven’t given much time or effort to writing about them, or anything related to software, technology, or programming for that matter. I dabbled with the idea of having one personal blog and one separate code blog for a while, to cater to different people.</p>

<h2>Jekyll</h2>

<p>After learning about <a href="http://github.com/mojombo/jekyll">Jekyll</a>, something just clicked.  My blog has always been locked up in a database of sorts since its inception.  First it started with <a href="http://drupal.org">Drupal</a>, then I moved to <a href="http://www.wordpress.org">Wordpress</a> which I explain in <a href="/Announcements/2008/04/13/welcome-to-the-new-aashay-com.html">this old announcement</a>. But why bother with such a feature-rich content management system when all I need is…a blog?</p>

<p>So, in order to reignite my writing flame and keep my programming chops sharp, I’ve decided to migrate my entire site over to Jekyll.  I hand-coded the HTML/CSS styling (although it’s primarily based on <a href="http://warpspire.com/">Kyle Kneath</a>’s very excellent and very popular <a href="http://warpspire.com/hemingway/">Hemingway</a> Wordpress theme) and I even wrote a custom script (a Rakefile, for you ruby nerds out there) to help me deploy it to GitHub’s Pages, which is now my new host.</p>

<p>I also implemented the lovingly-created <a href="http://tapirgo.com">Tapir API</a> for searching, and dropped in the excellent <a href="http://disqus.com">Disqus</a> decentralized commenting system.  Part of my rakefile includes tag generation, but I’ll hash out the details of that later.</p>

<p>I use <a href="http://macromates.com/">TextMate</a> to write and maintain all the code and the posts, and for long periods of writing, nothing beats <a href="http://www.hogbaysoftware.com/products/writeroom">WriteRoom</a>.  All posts are written in <a href="http://daringfireball.net/projects/markdown/">Markdown</a> and everything is pushed up to GitHub with, what else, <a href="http://git-scm.com/">Git</a>.</p>

<p>But what of the content?</p>

<h2>Please Exit In An Orderly Fashion</h2>

<p>I’m afraid that this next part may cause me to lose some readers (all 3 of you out there).  Fortunately, it will (hopefully) bring on a new readership.  The short version of it is, I’m going to be writing a lot about my programming projects.  This could include anything from discoveries I make while coding (complete with code samples) to musings about tangential passions (such as startups, technology, and the occasional rant-as-response post).  I may still post long-form essays and have people edit them, but the majority of posts will be quick and targeted.  Fortunately everything here is organized by categories, so it should be easier to filter through any noise.</p>

<p>That’s the plan, at least.  This could all change very quickly.  What’s more important than the plan is the goal:  to write as much as possible and as often as possible, and to do it all like a hacker.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changes]]></title>
    <link href="http://aashay.com/blog/2008/12/29/changes/"/>
    <updated>2008-12-29T00:00:00-08:00</updated>
    <id>http://aashay.com/blog/2008/12/29/changes</id>
    <content type="html"><![CDATA[<p><em>In this post, I discuss a few major life changes I've recently made, the stimulus for the change, and my plans for the immediate future.</em></p>

<!-- more -->


<p>I haven't worked on any computer projects in a few weeks. I haven't written a new essay in a few months. I haven't written a new original song or worked on my short stories in a few years. One morning I woke up realizing all of these things at once and I decided that something wasn't right.  Was it a lack of creativity?  Motivation perhaps?  Well, it turns out that it was a combination of both. But what could be causing such a drain?</p>

<p>It turns out that it was my job.</p>

<p>A few months ago, I quit my job and moved to the Bay Area for a brand new one.  Some people found this change to be a bit drastic, but as I'll explain later in this essay, it was a decision in progress for several months. I came to realize that my job left me little time or energy to work on my own projects, and that coupled with general career path dissatisfaction made me decide that it was time to move on.  I'd like to provide a basic summary of what I did, and why.</p>

<h2>So what is it that you do here?</h2>


<p>I graduated engineering school with a degree involving a healthy blend of business and nerdery.  Most people know that I'm in the software industry, yet don't realize that I did not graduate with a degree in Computer Science. I made that move specifically so that I got a lot more exposure to the business side of engineering, and it was definitely the right move. So naturally after I graduated I decided to pursue the best of both worlds.</p>

<p>Consulting was a great fit, and so I managed to land myself a pretty hip gig traveling to the west coast working on, you guessed it, business software.  I went to clients, talked about their business needs, put on headphones, and crafted solutions out of thin air.</p>

<p>I got a lot of exposure to the whole "real world" thing, but I also learned a lot about the niche I was in.  I busted ass, and I'd say I was pretty decent at what I did.  I made senior in a year, which was pretty cool, since that doesn't happen too much at my former company.</p>

<p>When I told my manager I was leaving, it was pretty evident that he didn't see it coming.  He explained to me that I was on the "fast track" at my company and in my career, and that I should be absolutely sure of what I'm doing before making such a drastic career change.</p>

<p>So why'd I jump ship?</p>

<h2>Didn't you get the memo?</h2>


<p>I'm going to let you in on a few secrets.  Most common folks don't know anything about ERP, CRM, PLM, B2B, B2C, or any other fancy acronyms you throw at them.  All they know is that they get paid to go to work, and sometimes they spend that money on things.  The business world has a very ornate ecosystem that, for some reason, works like an echo chamber.  Everyone in it can hear each other to some degree, but anyone outside of it is blissfully unaware of how it affects them.</p>

<p>When you go to the store to buy something, you're buying directly from a business.  We call that "Business to Consumer" or B2C for short.  However, that business can't do everything on its own to sell you that product (no, not even Apple.  Looooove yooou!) and so it has to depend on other businesses to help it along the way.  The interaction between businesses (business-to-business, or B2B) is the space I'm in, and it's a different monster from the B2C interactions that we are all used to.</p>

<p>That thing you bought at the store?  Well it wasn't always there.  It got shipped there, and so that involved some sort of shipping logistics.  Someone had to purchase that thing from some vendor, or perhaps put in an order at some overseas manufacturing facility, so now we're talking about procurement or perhaps production.  Clearly there was money involved, so that means financials.  Obviously a bunch of human beings were involved in this and so now we're talking about human resources.  Maybe there were some sales guys involved in cutting a deal to get that product to the stores and in your hands, so that means some sort of customer relationship management.</p>

<p>If all of this sounds complex, it's because it is.  Being the enginerd I am, I'm attracted to complex systems.  The unfortunate part about these <em>complex</em> systems is that they are also usually <em>complicated</em>.  But, that doesn't mean they have to be.</p>

<h2>It's not that I'm lazy.  It's that I don't care.</h2>


<p><span>Business software doesn't evolve as rapidly as consumer software.</span> However, in the past few years, a handful of really bright people decided to take unique approaches to some common complexities.  They decided "Hey, we're going to do this differently" and of course their well-established counterparts scoffed.  They found a way to deliver business software without the typical overhead and up-front costs to the customer, and Software-as-a-Service was born.</p>

<p>My former company is, by design, affiliated with one of those well-established counterparts.  So, when I was sent out to help folks with their businesses, they had to play by our rules, which were the rules passed down by our king company.  We used a specific platform, did things a specific way, and used the same playbooks over and over for completely different businesses.  Also, the tools and technology we used were designed for very specific purposes.</p>

<p>I think most good technologists don't like being tied down like this, especially early on in their careers.  I suppose if I stuck around, I would've become a total guru at doing what I was doing.  But that would've just turned me into a magician with one good magic trick, and that's not the career path I wanted to head down.</p>

<p>I don't want to be such a specialist.  I want to experience a wide variety of technologies, tools, and tricks of the trade.  I want to expand my horizons and work with the absolute best.  That handful of really bright people who take unique approaches have created astounding companies that have developed revolutionary technology- and I want to be a part of that wave.  Knowing about it and not being a part of it caused me to become a bit stagnant.</p>

<p>Of course, there were other reasons besides wanting to hang out with the cool kids that made me make the switch.</p>

<h2>Deeper and deeper.  Way down.</h2>


<p>Few people would argue against the statement that the San Francisco Bay Area (which includes Silicon Valley) is filled with some of the country's brightest minds.  I always try to be around smart people, and while the folks I previously worked with were quite smart (and thanks to the hours I worked, I was definitely around them quite a bit), there was something about the Bay Area vibe that caught my attention.  Moving to the Bay Area was an obvious choice.</p>

<p>I managed to get lucky in that my last project, before I quit, was in the Bay Area, and I stayed at a place in San Francisco while on it.  However, just because I resided in San Francisco didn't mean I "lived" in San Francisco.  My job's long hours and travel schedule were hardly conducive to any sort of social lifestyle out here, and that was a problem.</p>

<p>My former company was also having issues of its own.  Retention was poor, possibly because of "the economy" or the shifts in the company direction.  Nobody really knows even today, but the point is that the situation was looking a bit grim.  While my particular position was secure (at least, I assumed as much), all the nervous energy made it apparent that I needed a backup plan.</p>

<p>I found a position at my new company (I still need to talk to our PR department to see if it's okay for me to disclose the name, will post an update later if possible) that lets me build things that help other people by making their work lives easier, and allows me to work in a stimulating environment with intelligent people.  So the question that remains is, what's next?</p>

<h2>I wouldn't say I've been missing it, Bob</h2>


<p>Some of you may be wondering if I miss the perks that came with my consulting job. Don't I miss the basically-free travel, hotel and airline points, and nomad lifestyle? Meh, not really.  I'm not going to lie and say that the next five years of my life are planned out.  Sure, there's a possibility of me getting back into the consulting gig some day.  There's even the possibility of me not being in the software realm in the future.  It's pretty hard to tell where I'll be, but that's not to say I don't have a vision for the future.</p>

<p>It's no secret that I'm aligning myself to either create or be a part of a start-up some day.  Until that happens, I can only absorb as much knowledge as possible and develop skills along the way to prepare me for those days.  I'm pretty sure that my recent career move is only going to help in that respect.  I almost make it sound like I've got some sort of career commitment phobia, but rest assured, as long as I'm being intellectually stimulated, working on a kickass product, and working with brilliant people, I'll be quite happy.</p>

<p>Now, what these decisions are going to do for my comatose creative life is still a toss-up...but I suppose I've already taken the first step.</p>

<p>Special thanks to <a href="http://www.dashofstash.com" target="_blank">Mike Stashwick</a> for reading drafts of this essay.</p>
]]></content>
  </entry>
  
</feed>
